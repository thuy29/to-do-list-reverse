name: CI/CD Workflow - Main

on:
  workflow_run:
    workflows: ["CI workflow dev"]
    types:
      - completed

permissions:
  contents: write

jobs:
  main-workflow:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Dependencies install for backend
        run: |
          cd backend
          npm install

      - name: Tests for backend
        run: |
          cd backend
          npm test

      - name: Dependencies install for frontend
        run: |
          cd frontend
          npm install

      - name: Tests for frontend
        run: |
          cd frontend
          npm test


      - name: Install Docker and Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version


      - name: Start the application
        run: |
          docker-compose up -d


      - name: Wait for the application to be ready
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:3000 > /dev/null; then
              echo "Application is ready";
              exit 0;
            fi;
            echo "Waiting for the application...";
            sleep 5;
          done;
          exit 1

      - name: Install dependencies for E2E tests
        run: |
          cd e2e-tests
          npm install

      - name: Run E2E tests
        run: |
          cd e2e-tests
          npm test


      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install Docker compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Verify Docker compose
        run: docker-compose --version

      - name: (Build/ Push) Docker image
        run: |
          docker-compose build
          docker-compose push
